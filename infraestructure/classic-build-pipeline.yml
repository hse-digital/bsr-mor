trigger:
  - classic-build

pool:
  vmImage: ubuntu-latest

resources:
    repositories:
    - repository: AngularTools
      type: git
      name: 'BSR-AlphaBetaImplementation/AngularTools'

stages:
- stage: BuildTools
  jobs:
  - job: InstallNet7
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 7.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
  - job: Checkout
    steps:
    - checkout: Self
    - checkout: AngularTools
      path : AngularTools
  - job: BuildAngularTools
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'restore'
        projects: 'AngularTools/AddGoogleTagManager/AddGoogleTagManager/AddGoogleTagManager.csproj'  # Adjust path as needed
      displayName: 'Restore AngularTools Dependencies'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'AngularTools/AddGoogleTagManager/AddGoogleTagManager/AddGoogleTagManager.csproj'  # Adjust path as needed
      displayName: 'Build AngularTools Project'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'AngularTools/AddGoogleTagManager/AddGoogleTagManager/AddGoogleTagManager.csproj'  # Adjust path as needed
        arguments: '--configuration $(BuildConfiguration) --output /bin'
      displayName: 'Publish AngularTools Project'
    - script: /bin/AddGoogleTagManager /HSE.MOR.Client/src/index.html' MyGoogleTagId
  - job:
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.16.x'
    - task: Npm@1
      inputs:
        command: 'install'
        workingDir: 'AngularTools'
    - task: Npm@1
      inputs:
        command: 'run'
        workingDir: 'AngularTools'
        arguments: 'build'
    - task: CopyFiles@2
      inputs:
        SourceFolder: 'AngularTools/dist'
        Contents: '**'
        TargetFolder: 'HSE.MOR.Client'
        CleanTargetFolder: true
        OverWrite: true
        flattenFolders: true
        preserveTimestamp: true
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/HSE.MOR.Client'
        ArtifactName: HSE.MOR.Client

- stage: UnitTest
  jobs:
  - job: 
    steps:
      - task: DotNetCoreCLI@2
        displayName: 'Run Unit Tests'
        inputs:
          command: 'test'
          projects: '**/HSE.MOR.API.UnitTests.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'Build API'
        inputs:
          command: 'build'
          projects: 'HSE.MOR.API/HSE.MOR.API.csproj'
          arguments: '--output publish_output --configuration Release'
      - task: ArchiveFiles@2
        displayName: 'Archive API files'
        inputs:
          rootFolderOrFile: 'publish_output/'
          includeRootFolder: false 
          archiveFile: '$(Build.ArtifactStagingDirectory)/HSE.MOR.API.zip'
      - task: PublishBuildArtifacts@1
        displayName: 'Publish API artifact'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/HSE.MOR.API.zip'
          ArtifactName: HSE.MOR.API
      
